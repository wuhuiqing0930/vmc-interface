{"name": "1.1.11_create_admin_user_admin_existed", "status": "failed", "statusDetails": {"message": "AssertionError: assert 200 == 400\n +  where 200 = <Response [200]>.status_code", "trace": "self = <testcases.api_test.test_01_get_user_info.TestGetUserInfo object at 0x09E6AB98>\nadd_user_setup_down = ('Users', 'Create_user', nan, '1.1.11_create_admin_user_admin_existed', '{\"username\":\"auto_admin\",\"name\":\"auto_admin\",\"password\":\"casa1234\",\"enabled\":1,\"email\":\"auto_admin@qq.com\",\"group\":\"admin\"}', '/auth/users', ...)\nmodule = 'Users', sub_module = 'Create_user', domain = nan\ncasename = '1.1.11_create_admin_user_admin_existed'\npre_data = '{\"username\":\"auto_admin\",\"name\":\"auto_admin\",\"password\":\"casa1234\",\"enabled\":1,\"email\":\"auto_admin@qq.com\",\"group\":\"admin\"}'\nurl = '/auth/users', casemethod = 'POST', expect_code = 400\nexpect_result = '{\"status\":null,\"appCode\":405,\"message\":\"Username: auto_admin already exists\"}'\nnote = nan\n\n    @allure.story(\"Add  Users\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\n        ('module', 'sub_module', 'domain', 'casename', 'pre_data', 'url', 'casemethod', 'expect_code', 'expect_result',\n         'note'),\n        data_row1)\n    def test_add_user(self, add_user_setup_down, module, sub_module, domain, casename, pre_data, url, casemethod,\n                      expect_code,\n                      expect_result, note):\n        allure.dynamic.title(casename)\n        if note:\n            allure.dynamic.issue(note)\n        logger.info(\"*************** 开始执行用例 ***************\")\n        step_1()\n        result = USER.add_users(pre_data)\n        username = json.loads(pre_data).get(\"username\")\n        result_check = USER.get_users(username)\n        logger.info(\"code ==>> 期望结果：， 实际结果：{}\".format(result.status_code))\n>       assert result.status_code == expect_code\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntest_01_get_user_info.py:45: AssertionError"}, "steps": [{"name": "步骤1 ==>> 获取所有用户信息", "status": "passed", "start": 1720335967509, "stop": 1720335967510}], "attachments": [{"name": "log", "source": "4c61babb-94f3-4936-a459-ea5ec97c1098-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b202bacd-0cae-48ad-989a-663a97aebba1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "module", "value": "'Users'"}, {"name": "sub_module", "value": "'Create_user'"}, {"name": "domain", "value": "nan"}, {"name": "casename", "value": "'1.1.11_create_admin_user_admin_existed'"}, {"name": "pre_data", "value": "'{\"username\":\"auto_admin\",\"name\":\"auto_admin\",\"password\":\"casa1234\",\"enabled\":1,\"email\":\"auto_admin@qq.com\",\"group\":\"admin\"}'"}, {"name": "url", "value": "'/auth/users'"}, {"name": "casemethod", "value": "'POST'"}, {"name": "expect_code", "value": "400"}, {"name": "expect_result", "value": "'{\"status\":null,\"appCode\":405,\"message\":\"Username: auto_admin already exists\"}'"}, {"name": "note", "value": "nan"}], "start": 1720335967509, "stop": 1720335969142, "uuid": "d69af29b-1c40-4674-be2b-eacce76b6b0a", "historyId": "a78606224d07c80c39af2afeb467a540", "testCaseId": "4ecf57078d43f2c49dfd101a3f128c52", "fullName": "testcases.api_test.test_01_get_user_info.TestGetUserInfo#test_add_user", "labels": [{"name": "epic", "value": "Smoke-F8.5"}, {"name": "feature", "value": "Users"}, {"name": "story", "value": "Add  Users"}, {"name": "severity", "value": "trivial"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_01_get_user_info"}, {"name": "subSuite", "value": "TestGetUserInfo"}, {"name": "host", "value": "DESKTOP-wuhuiqing"}, {"name": "thread", "value": "20432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_01_get_user_info"}], "links": [{"type": "issue", "url": "nan", "name": "nan"}]}